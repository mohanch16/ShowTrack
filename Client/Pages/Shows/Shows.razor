@page "/shows"
@using ShowTrack.Shared.Models
@inject HttpClient Http

<PageTitle>Shows Catalog</PageTitle>

<h1>Shows Catalog</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (shows == null)
{
    <p><em>Loading...</em></p>
}
else
{    
    <div class="search-bar mb-4 d-flex align-items-center">
        <input type="text"  
            class="form-control form-control-lg" 
            @bind-value="@searchString" 
            @bind-value:event="oninput" 
            placeholder="Search for shows.."  />

        <button class="btn btn-lg btn-secondary ms-2" @onclick="SearchShows">Search</button>
    </div>

    <div class="d-flex flex-wrap gap-3">
        @foreach (var show in shows)
        {
            <ShowListItem show="@show" />
        }
    </div>
}

@code {
    private Show[]? shows;

    private string? searchString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.shows = await Http.GetFromJsonAsync<Show[]>("api/Shows");
    }

    public async Task SearchShows() {
        if (!String.IsNullOrWhiteSpace(this.searchString))
        {
            this.shows = await Http.GetFromJsonAsync<Show[]>($"api/Shows/search?showTitle={this.searchString}");            
        }
    }
}
