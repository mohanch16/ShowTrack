@page "/shows"
@using ShowTrack.Shared.Models
@using ShowTrack.Components.Common
@inject HttpClient Http

@namespace ShowTrack.Components.Shows

@if (shows == null)
{
    <p><em>Loading...</em></p>
}
else
{ 
    <Filters searchString="" OnApplyFilters="@SearchShows"></Filters>

    <MudPaper Elevation="2" Class="p-4 mb-4">
        <div class="d-flex flex-wrap gap-3">
            @foreach (var show in shows)
            {
                <ShowListItem show="@show" />
            }
        </div>
    </MudPaper>    
@* 
    <div id="paginationSection" class="mb-4">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                </li>
                <li class="page-item active" aria-current="page">
                    <a class="page-link bg-secondary border-secondary" href="#">1</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div> *@
}

@code {
    [Parameter]
    public ShowType showType { get; set; } = ShowType.None;
    
    private Show[]? shows;

    protected override async Task OnInitializedAsync()
    {
        if (this.showType != ShowType.None)
        {                
            this.shows = await Http.GetFromJsonAsync<Show[]>($"api/Shows?showType={this.showType}");            
        }
        else 
        {
            this.shows = await Http.GetFromJsonAsync<Show[]>("api/Shows");
        }
    }

    public async Task SearchShows(string searchString) 
    {
        if (string.IsNullOrWhiteSpace(searchString)) return;

        if (this.showType != ShowType.None)
        {     
            this.shows = await Http.GetFromJsonAsync<Show[]>($"api/Shows/search?showTitle={searchString}&showType={this.showType}");
        }
        else 
        {
            this.shows = await Http.GetFromJsonAsync<Show[]>($"api/Shows/search?showTitle={searchString}");
        }
    }
}
