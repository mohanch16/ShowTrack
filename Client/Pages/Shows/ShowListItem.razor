@using ShowTrack.Shared.Models
@using ShowTrack.Shared.Extensions
@inject ISnackbar Snackbar

@namespace ShowTrack.Components.Shows

<div class="card card-width">
    <div class="card-body">
        <h5 class="card-title">@show.Title (@show.ReleaseYear)</h5>
        <h6 class="mb-3">
            <span class="badge bg-info">@((@show.Type).Description())</span>
            <span class="badge bg-secondary">Rating: @show.Rating</span>
        </h6>
        <p class="card-text text-truncate-fade overflow-hidden">
            @show.Description
        </p>
        <p class="card-text">                        
            <span>Cast: </span>
            @if (@show.Cast?.Length > 0) 
            {
                <span>@String.Join(", ", @show.Cast.Take(3))</span>
                @if (@show.Cast.Length > 3)
                {
                    <span>,</span>
                    <span class="ml-1 text-muted">+ @(@show.Cast.Length - 3) More</span>
                }
            }
            else
            {
                <span class="text-muted text-secondary">Not Available</span>
            }
        </p>
        <p class="card-text">                        
            <span>Directed by: </span>
            @if (@show.Directors?.Length > 0) 
            {
                <span>@String.Join(", ", @show.Directors.Take(3))</span>
                @if (@show.Directors.Length > 3)
                {
                    <span>,</span>
                    <span class="ml-1 text-muted">+ @(@show.Directors.Length - 3) More</span>
                }
            }
            else
            {
                <span class="text-muted text-secondary">Not Available</span>
            }
        </p>        
        <p class="card-text gap-1">                        
            <span class="me-1">Categories: </span>
            @if (@show.Categories?.Length > 0) 
            {
                <span class="d-inline-flex flex-wrap gap-1">
                    @foreach (var category in @show.Categories) 
                    {
                        <span class="badge bg-light rounded-pill border text-secondary">
                            @category
                        </span>
                    }
                </span>
            }
            else
            {
                <span class="text-muted text-secondary">Not Available</span>
            }
        </p>        
    </div>
    <div class="card-footer d-flex justify-content-between bg-light">
        <a href="#" class="btn btn-outline-secondary text-center" 
            role="button" @onclick="@(() => Snackbar.Add("\"Select & Compare\" feature is coming soon.."))">Select</a>                    
        <a href="#" class="btn btn-primary text-center" role="button">View details</a>
    </div>
</div>

@code {
    [Parameter]
    public ShowDTO show { get; set; } = null!;
}
